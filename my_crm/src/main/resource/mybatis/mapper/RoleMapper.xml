<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ujiuye.auth.mapper.RoleMapper" >

  <!--添加角色(只添加基本信息，不包括权限)，并返回role的主键roleid，添加新角色的权限需要用roleid-->
  <insert id="addRole" useGeneratedKeys="true" keyProperty="roleid" keyColumn="roleid">
    insert into role(rolename,roledis,status) values(#{rolename},#{roledis},#{status})
  </insert>

  <!--添加新角色的权限(添加中间表)-->
  <insert id="addRoleSource">
        insert into role_sources(sid,roleid) values
        <foreach collection="source" item="s_id" separator=",">
            (#{s_id},#{roleid})
        </foreach>
  </insert>

  <!--根据主键修改单个角色的权限(先删除全部权限，再添加权限)-->
  <update id="updateRole">
        update role set rolename=#{rolename} ,roledis=#{roledis},status=#{status} where roleid=#{roleid}
  </update>
  <delete id="deleteRole">
        delete from role_sources where roleid=#{roleid}
  </delete>
  <insert id="insertRole">
        insert into role_sources(sid,roleid) values
        <foreach collection="source" item="s_id" separator=",">
            (#{s_id},#{role.roleid})
        </foreach>
  </insert>


  <!--根据主键查询单个角色-->
  <select id="getRoleById" resultMap="getRoleByIdMap">
    select * from role where roleid=#{roleid}
  </select>
  <resultMap id="getRoleByIdMap" type="Role">
      <id property="roleid" column="roleid"></id>
      <collection property="sources" column="roleid" ofType="Sources"
                select="getSources"></collection>
  </resultMap>
  <select id="getSources" resultType="Sources">
        select s.* from sources s,role_sources rs where rs.roleid=#{roleid} and rs.sid=s.id
  </select>

  <!--查询全部的角色-->
  <select id="getAllRole" resultType="Role">
    select * from role order by roleid desc
  </select>




  <resultMap id="BaseResultMap" type="com.ujiuye.auth.bean.Role" >
    <id column="roleid" property="roleid" jdbcType="INTEGER" />
    <result column="rolename" property="rolename" jdbcType="VARCHAR" />
    <result column="roledis" property="roledis" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    roleid, rolename, roledis, status
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from role
    where roleid = #{roleid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from role
    where roleid = #{roleid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ujiuye.auth.bean.Role" >
    insert into role (roleid, rolename, roledis, 
      status)
    values (#{roleid,jdbcType=INTEGER}, #{rolename,jdbcType=VARCHAR}, #{roledis,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.ujiuye.auth.bean.Role" >
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="roleid != null" >
        roleid,
      </if>
      <if test="rolename != null" >
        rolename,
      </if>
      <if test="roledis != null" >
        roledis,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="roleid != null" >
        #{roleid,jdbcType=INTEGER},
      </if>
      <if test="rolename != null" >
        #{rolename,jdbcType=VARCHAR},
      </if>
      <if test="roledis != null" >
        #{roledis,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ujiuye.auth.bean.Role" >
    update role
    <set >
      <if test="rolename != null" >
        rolename = #{rolename,jdbcType=VARCHAR},
      </if>
      <if test="roledis != null" >
        roledis = #{roledis,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where roleid = #{roleid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ujiuye.auth.bean.Role" >
    update role
    set rolename = #{rolename,jdbcType=VARCHAR},
      roledis = #{roledis,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER}
    where roleid = #{roleid,jdbcType=INTEGER}
  </update>
</mapper>